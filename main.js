// Generated by CoffeeScript 1.12.4
(function() {
  var Gist, bind, main, preview, sidebar;

  bind = rx.bind;

  rx.rxt.importTags();

  Gist = (function() {
    function Gist(id, desc, files) {
      this.id = id;
      this.desc = desc;
      this.files = files;
    }

    return Gist;

  })();

  sidebar = function(args) {
    var currentGist, gists;
    gists = args.gists;
    currentGist = args.currentGist;
    return div({
      "class": 'sidebar'
    }, [
      ul({}, gists.map(function(g) {
        return li({
          "class": "" + (g === currentGist.get() ? 'selected' : ''),
          click: function() {
            return currentGist.set(g);
          }
        }, g.desc);
      }))
    ]);
  };

  preview = function(args) {
    var currentGist, gists;
    gists = args.gists;
    currentGist = args.currentGist;
    return div({
      "class": 'preview'
    }, [
      h3({}, bind(function() {
        return currentGist.get().desc;
      })), div({}, bind(function() {
        var file, fileName, ref, results;
        ref = currentGist.get().files;
        results = [];
        for (fileName in ref) {
          file = ref[fileName];
          results.push((function(fileName, file) {
            var $code, fileContent;
            fileContent = rx.cell('');
            fileContent.onSet.sub(function() {
              return setTimeout(function() {
                return $('pre code').each(function(i, block) {
                  return hljs.highlightBlock(block);
                });
              }, 0);
            });
            $.ajax({
              url: file.raw_url,
              success: function(data) {
                return fileContent.set(data);
              }
            });
            return div({}, [
              i({
                click: function() {
                  return $code.slideToggle('fast');
                }
              }, fileName), pre({}, [
                $code = code({
                  "class": "" + (file.language.toLowerCase())
                }, bind(function() {
                  return fileContent.get();
                }))
              ])
            ]);
          })(fileName, file));
        }
        return results;
      }))
    ]);
  };

  main = function(args) {
    var $base, currentGist, gistsAll, loadFromGithub;
    gistsAll = rx.array([]);
    currentGist = rx.cell("loading...", "loading", {
      "filename": {
        "language": "javascript"
      }
    });
    loadFromGithub = function() {
      return $.ajax({
        url: 'https://api.github.com/users/drbelfast/gists',
        success: function(data) {
          gistsAll.replace(data.map(function(g) {
            return new Gist(g.id, g.description, g.files);
          }));
          return currentGist.set(gistsAll.at(0));
        }
      });
    };
    loadFromGithub();
    $base = div({
      "class": 'hi'
    }, [
      h1('hello'), h2({}, bind(function() {})), div({
        "class": 'container'
      }, bind(function() {
        if (gistsAll.length() > 0) {
          return [
            sidebar({
              gists: gistsAll,
              currentGist: currentGist
            }), preview({
              gists: gistsAll,
              currentGist: currentGist
            })
          ];
        } else {
          return [div({}, 'Loading...')];
        }
      }))
    ]);
    return $base;
  };

  $('body').append(main);

}).call(this);
